<launch>
  <include file="$(find gazebo_ros)/launch/empty_world.launch"/>

 <!-- <param name="robot_description"
     textfile="$(find trikey_description)/urdf/urdf_generator/robot.urdf" /> -->
  <param name="robot_description"
      textfile="$(find trikey_description)/urdf/urdf_generator/robot.urdf" />
<!--  <param name="robot_description"-->
<!--      textfile="$(find trikey_description)/urdf/TrikeyBaseAssembly.urdf" />-->

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"
    args="-file $(find trikey_description)/urdf/urdf_generator/robot.urdf -urdf -model trikey"
    output="screen" />
<!--  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model"-->
<!--    args="-file $(find trikey_description)/urdf/TrikeyBaseAssembly.urdf -urdf -model trikey -z 0.5"-->
<!--    output="screen" />-->

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find trikey_control)/config/trikey_control.yaml" command="load"/>

  <!-- publish joints TFs for Rviz -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
  <remap from="/joint_states" to="/joint_states" />
  </node>

  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/trikey" args="joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
<!--  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"-->
<!--    respawn="false" output="screen">-->
<!--    <remap from="/joint_states" to="/trikey/joint_states" />-->
<!--  </node>-->

 <!-- <node name="rviz" pkg="rviz" type="rviz" -->
   <!-- args="-d $(find trikey_description)/rviz/urdf.rviz" /> -->

</launch>